{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst paginate = (items, currentPage, resultPerPage) => {\n    if (items instanceof Array) {\n        const startIndex = (currentPage - 1) * resultPerPage;\n        return {\n            items: items.slice(startIndex, startIndex + resultPerPage)\n        };\n    } else {\n        throw new Error(`Array is required.`);\n    }\n};\n\nconst usePagination = (\n    initialArray = [],\n    { resultPerPage = 1, alwaysVisible = true }\n) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(null);\n    const [pageCount, setPageCount] = useState(null);\n\n    const { items } = paginate(initialArray, currentPage, resultPerPage);\n    const [pages, setPages] = useState([]);\n\n    useEffect(() => {\n        setTotalPage(Math.ceil(initialArray.length / resultPerPage));\n        setPageCount(totalPage === 1 && !alwaysVisible ? 0 : totalPage);\n        setPages([...Array(pageCount).keys()].map(key => key + 1));\n    }, [\n        alwaysVisible,\n        pageCount,\n        initialArray.length,\n        totalPage,\n        resultPerPage\n    ]);\n\n    return { items, pages, setCurrentPage, currentPage };\n};\n\nexport default usePagination;\n"],"names":["paginate","items","currentPage","resultPerPage","Array","startIndex","slice","Error","usePagination","initialArray","arguments","length","undefined","_ref","_ref$resultPerPage","_ref$alwaysVisible","alwaysVisible","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","totalPage","setTotalPage","_useState5","_useState6","pageCount","setPageCount","_paginate","_useState7","_useState8","pages","setPages","useEffect","Math","ceil","_toConsumableArray","keys","map","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAEC,WAAW,EAAEC,aAAa,EAAK;EACpD,IAAIF,KAAK,YAAYG,KAAK,EAAE;IACxB,IAAMC,UAAU,GAAG,CAACH,WAAW,GAAG,CAAC,IAAIC,aAAa;IACpD,OAAO;MACHF,KAAK,EAAEA,KAAK,CAACK,KAAK,CAACD,UAAU,EAAEA,UAAU,GAAGF,aAAa;KAC5D;GACJ,MAAM;IACH,MAAM,IAAII,KAAK,qBAAqB,CAAC;;AAE7C,CAAC;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,GAGd;EAAA,IAFDC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAAG,IAAA,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAAE,kBAAA,GAAAD,IAAA,CACfV,aAAa;IAAbA,aAAa,GAAAW,kBAAA,cAAG,CAAC,GAAAA,kBAAA;IAAAC,kBAAA,GAAAF,IAAA,CAAEG,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,IAAI,GAAAA,kBAAA;EAEzC,IAAAE,SAAA,GAAsCC,QAAQ,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA1Cf,WAAW,GAAAiB,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAkCJ,QAAQ,CAAC,IAAI,CAAC;IAAAK,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAkCR,QAAQ,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAAG,SAAA,GAAkB9B,QAAQ,CAACS,YAAY,EAAEP,WAAW,EAAEC,aAAa,CAAC;IAA5DF,KAAK,GAAA6B,SAAA,CAAL7B,KAAK;EACb,IAAA8B,UAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBG,SAAS,CAAC,YAAM;IACZV,YAAY,CAACW,IAAI,CAACC,IAAI,CAAC5B,YAAY,CAACE,MAAM,GAAGR,aAAa,CAAC,CAAC;IAC5D0B,YAAY,CAACL,SAAS,KAAK,CAAC,IAAI,CAACR,aAAa,GAAG,CAAC,GAAGQ,SAAS,CAAC;IAC/DU,QAAQ,CAACI,kBAAA,CAAIlC,KAAK,CAACwB,SAAS,CAAC,CAACW,IAAI,EAAE,EAAEC,GAAG,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,GAAG,CAAC;MAAC,CAAC;GAC7D,EAAE,CACCzB,aAAa,EACbY,SAAS,EACTnB,YAAY,CAACE,MAAM,EACnBa,SAAS,EACTrB,aAAa,CAChB,CAAC;EAEF,OAAO;IAAEF,KAAK,EAALA,KAAK;IAAEgC,KAAK,EAALA,KAAK;IAAEZ,cAAc,EAAdA,cAAc;IAAEnB,WAAW,EAAXA;GAAa;AACxD,CAAC;;;;"}